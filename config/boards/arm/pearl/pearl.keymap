/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>
#define DEFAULT 0
#define NUM_LAYER 1
#define LAYER_3 2
#define F_LAYER 3

&soft_off {
    hold-time-ms = <5000>; // Only turn off it the key is held for 5 seconds or longer.
	  };
&lt {
    tapping-term-ms = <500>;
    };

/ {
	keymap {
		compatible = "zmk,keymap";
		default_layer {
			bindings = <
		       &kp ESC          &kp Q             &kp W            &kp E               &kp R             &kp T          &kp Y      &kp U     &kp I        &kp O       &kp P       &kp DEL        &kp BSPC
      		       &kp TAB          &kp A             &kp S            &kp D               &kp F             &kp G          &kp H      &kp J     &kp K        &kp L       &kp BSLH    &kp ENTER
      		       &kp LSHFT        &kp Z             &kp X            &kp C               &kp V             &kp B          &kp N      &kp M     &kp COMMA    &kp DOT     &kp FSLH    &kp RSHIFT
      		        	        &kp LCTRL         &mo 2            &lt NUM_LAYER LALT  &kp SPACE                        &kp SPACE  &kp RALT  &kp RCTRL
			>;
		};

	layer_2 {
			 bindings = <
			&kp GRAVE        &kp Q             &kp W            &kp E               &kp R             &kp T          &kp Y      &kp N7     &kp N8      &kp N9     &kp MINUS    &kp ASTRK       &kp BSPC
			&kp TAB          &kp A             &kp S            &kp D               &kp F             &kp G          &kp H      &kp N4     &kp N5      &kp N6     &kp PLUS     &kp ENTER
			&kp LSHFT        &kp Z             &kp X            &kp C               &kp V             &kp B          &kp N      &kp N1     &kp N2      &kp N3     &kp FSLH     &kp RSHIFT
				         &kp LCTRL         &mo 3            &lt NUM_LAYER LALT  &kp SPACE                        &kp N0     &kp DOT    &kp RCTRL      
			>;
		};

	layer_3 {
			 bindings = <
			&kp GRAVE        &kp Q             &kp W            &kp E               &kp R             &kp T          &kp Y       &kp U     &kp I        &kp O      &kp P       &kp LBKT        &kp RBKT
			&kp TAB          &kp A             &kp S            &kp D               &kp F             &kp G          &kp H       &kp J     &kp K        &kp L      &kp SEMI    &kp PSCRN
			&kp LSHFT        &kp Z             &kp X            &kp C               &kp V             &kp B          &kp N       &kp M     &kp COMMA    &kp DOT    &kp FSLH    &kp RSHIFT
					 &kp LCTRL         &mo 2            &mo 1               &kp SPACE                        &kp SPACE   &kp RALT  &kp RCTRL      
			>;
		};

	layer_4 {
			 bindings = <
			&kp GRAVE        &kp F1             &kp F2            &kp F3            &kp F4           &kp F5         &kp F6      &kp F7     &kp F8        &kp F9     &kp F10      &kp F11      &kp F12
			&bt BT_CLR       &bt BT_SEL 0       &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3     &out OUT_TOG   &kp H       &soft_off  &kp K         &kp L      &kp APOS     &kp PSCRN
			&kp LSHFT        &ext_power EP_TOG  &rgb_ug RGB_TOG   &rgb_ug RGB_EFF   &kp V            &kp B          &kp N       &kp M      &kp COMMA     &kp DOT    &kp FSLH     &kp RSHIFT
					 &kp LCTRL          &mo 2             &mo 3             &kp SPACE                       &kp SPACE   &kp RALT   &kp RCTRL    
			>;
		};
	};
};
